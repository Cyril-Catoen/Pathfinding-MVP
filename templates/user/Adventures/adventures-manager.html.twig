{% extends 'user/base.html.twig' %}

        {% block metatitle %}
        <title>Pathfinder - Adventure Manager</title>
        {% endblock metatitle %}

{% block main %}

<main class="adventures-manager">
    <section class="container">
        <div class="flex-start gap-2 pdt-8 pdb-2">
            <a class="arrow-return-button" href="{{ path('dashboard')}}">
                        <i class="fas fa-arrow-left" src="../../assets/img/LiveTrack.jpeg" alt=""></i>
            </a> 
            <h2>ADVENTURES MANAGER</h2>
        </div>
    
    <div class="container-type-5">
        <div class="tab-wrapper">
            <div class="tab-content" id="tab-contacts">
                <div class="flex-between mb-3 mt-2">
                    <h3>All Adventures</h3>
                    <a href="{{ path('create-adventure') }}" class="button-type-4">+ Add</a>
                </div>

                <div class="contact-toolbar">
                    <div class="search-all-wrapper">
                        <input type="text" id="search-adventures" placeholder="Search an adventure..." />
                        <span class="clear-search" id="clear-search-adventures" title="Clear">&times;</span>
                    </div>
                    <div class="sort-buttons">
                        <button type="button" class="sort-button" data-sort="alpha">Z-A</button>
                        <button type="button" class="sort-button" data-sort="date">Recent</button>
                        <button type="button" class="sort-button" data-sort="status">Status</button>
                    </div>
                </div>

                <div class="table-wrapper">
                    <table class="adventures-table">
                        <thead>
                            <tr>
                                <th>Title</th>
                                <th>Status</th>
                                <th>Start</th>
                                <th>End</th>
                                <th>Timer</th>
                                <th>Display & Edit</th>
                                <th>Remove</th>
                            </tr>
                        </thead>
                        <tbody id="adventure-list">
                            {% if ongoingAdventure %}
                                <tr class="ongoing-highlight">
                                    <td>{{ ongoingAdventure.title }}</td>
                                    <td>{{ ongoingAdventure.status.value }}</td>
                                    <td>{{ ongoingAdventure.startDate|date('Y-m-d') }}</td>
                                    <td>{{ ongoingAdventure.endDate|date('Y-m-d') }}</td>
                                    <td>
                                        {% if ongoingAdventure.timerAlert %}
                                            {% if ongoingAdventure.status.value == 'ongoing' and ongoingAdventure.timerAlert.isActive %}
                                                <span 
                                                    class="timer-countdown" 
                                                    data-alert-time="{{ ongoingAdventure.timerAlert.alertTime|date('Y-m-d H:i:s') }}">
                                                    ⏳ Chargement...
                                                </span>
                                            {% else %}
                                                <span title="Timer programmé">
                                                    {{ ongoingAdventure.timerAlert.alertTime|date('d/m/Y H:i') }}
                                                </span>
                                            {% endif %}
                                        {% else %}
                                            <span class="text-muted">⏱️ Off</span>
                                        {% endif %}
                                    </td>

                                    <td>
                                        <a href="{{ path('adventure', {'id': ongoingAdventure.id}) }}">
                                            <i class="fas fa-pen"></i>
                                        </a>
                                    </td>
                                    <td>
                                        <a href="{{ path('delete-adventure', {'id': ongoingAdventure.id}) }}" class="delete-adventure-btn">
                                            <i class="fas fa-times"></i>
                                        </a>
                                    </td>
                                </tr>
                            {% else %}
                                <tr>
                                    <td colspan="7" class="text-center separator">Il n'y a pas d'aventure en cours.</td>
                                </tr>
                            {% endif %}

                            {% if otherAdventures is not empty %}
                                <tr>
                                    <td colspan="7" class="separator"><hr></td>
                                </tr>
                            {% endif %}

                            {% for adventure in otherAdventures %}
                                <tr class="adventure-row" data-title="{{ adventure.title|lower }}" data-start="{{ adventure.startDate.getTimestamp }}" data-status="{{ adventure.status.value }}">
                                    <td>{{ adventure.title }}</td>
                                    <td>{{ adventure.status.value }}</td>
                                    <td>{{ adventure.startDate|date('Y-m-d') }}</td>
                                    <td>{{ adventure.endDate|date('Y-m-d') }}</td>
                                    <td>
                                        {% if adventure.timerAlert %}
                                            <span>
                                                {{ adventure.timerAlert.alertTime|date('d/m/Y H:i') }}
                                            </span>
                                        
                                        {% else %}
                                            <span>⏱️ Off</span>
                                        {% endif %}
                                    </td>
                                    <td>
                                        <a href="{{ path('adventure', {'id': adventure.id}) }}">
                                            <i class="fas fa-pen"></i>
                                        </a>
                                    </td>
                                    <td>
                                        <a href="{{ path('delete-adventure', {'id': adventure.id}) }}" class="delete-adventure-btn">
                                            <i class="fas fa-times"></i>
                                        </a>
                                    </td>
                                </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

    </section>
</main>
{% endblock main %}
{% block script %}

{% for label, messages in app.flashes %}
    {% for message in messages %}
        <script>
            Swal.fire({
                title: "{{ message|e('js') }}",
                icon: "{{ label == 'error' ? 'error' : 'success' }}",
                timer: 2000,
                timerProgressBar: true,
                showConfirmButton: false
            });
        </script>
    {% endfor %}
{% endfor %}

<script>
document.addEventListener('DOMContentLoaded', () => {
    const searchInput = document.getElementById('search-adventures');
    const clearBtn = document.getElementById('clear-search-adventures');
    const sortButtons = document.querySelectorAll('.sort-button');
    let currentSort = 'alpha-asc'; // tri initial A-Z

    const tbody = document.getElementById('adventure-list');
    const ongoingRow = document.querySelector('.ongoing-highlight');
    let adventureRows = Array.from(document.querySelectorAll('.adventure-row'));

    // Crée ou récupère un séparateur <tr>
    let separator = document.querySelector('.separator');
    if (!separator) {
        separator = document.createElement('tr');
        separator.classList.add('separator');
        separator.innerHTML = '<td colspan="7"><hr></td>';
    }

    function updateView() {
        const query = searchInput.value.trim().toLowerCase();
        clearBtn.style.display = query ? 'inline' : 'none';

        // Filtrage logique + copie locale des lignes filtrées
        const filtered = adventureRows.filter(row => {
            const title = row.dataset.title;
            const match = title.includes(query);
            row.style.display = match ? '' : 'none';
            return match;
        });

        // Tri logique sur les lignes visibles
        filtered.sort((a, b) => {
            if (currentSort === 'alpha-asc') {
                return a.dataset.title.localeCompare(b.dataset.title);
            } else if (currentSort === 'alpha-desc') {
                return b.dataset.title.localeCompare(a.dataset.title);
            } else if (currentSort === 'date-recent') {
                return b.dataset.start - a.dataset.start;
            } else if (currentSort === 'date-old') {
                return a.dataset.start - b.dataset.start;
            } else if (currentSort === 'status-asc') {
                return a.dataset.status.localeCompare(b.dataset.status);
            } else if (currentSort === 'status-desc') {
                return b.dataset.status.localeCompare(a.dataset.status);
            }
        });

        // Réinjection DOM ordonnée, sans perte
        // On enlève les anciennes positions (mais sans supprimer du DOM)
        // Supprime tous les anciens séparateurs existants
        document.querySelectorAll('#adventure-list tr.separator').forEach(s => s.remove());


        // On réordonne
        filtered.forEach(row => tbody.appendChild(row));

        if (ongoingRow) {
            tbody.insertBefore(separator, ongoingRow.nextSibling);
        } else if (filtered.length > 0) {
            tbody.insertBefore(separator, filtered[0]);
        }
    }

    // Gestion boutons de tri
    sortButtons.forEach(btn => {
        btn.addEventListener('click', () => {
            const type = btn.dataset.sort;

            if (type === 'alpha') {
                currentSort = currentSort === 'alpha-asc' ? 'alpha-desc' : 'alpha-asc';
                btn.textContent = currentSort === 'alpha-asc' ? 'Z-A' : 'A-Z';
            } else if (type === 'date') {
                currentSort = currentSort === 'date-recent' ? 'date-old' : 'date-recent';
                btn.textContent = currentSort === 'date-recent' ? 'Old' : 'Recent';
            } else if (type === 'status') {
                currentSort = currentSort === 'status-asc' ? 'status-desc' : 'status-asc';
                btn.textContent = currentSort === 'status-asc' ? 'Status ↓' : 'Status ↑';
            }

            updateView();
        });
    });

    // Barre de recherche
    searchInput.addEventListener('input', updateView);

    clearBtn.addEventListener('click', () => {
        searchInput.value = '';
        clearBtn.style.display = 'none';
        updateView();
    });

    updateView(); // Initialisation
});
</script>

<!-- Countdown script -->
<script>
document.addEventListener('DOMContentLoaded', () => {
    const countdownElements = document.querySelectorAll('.timer-countdown');

    countdownElements.forEach(el => {
        const alertTime = new Date(el.dataset.alertTime);

        const interval = setInterval(() => {
            const now = new Date();
            const diff = alertTime - now;

            if (diff <= 0) {
                el.textContent = "🔔 Alerte déclenchée";
                clearInterval(interval);
                return;
            }

            const h = Math.floor(diff / (1000 * 60 * 60));
            const m = Math.floor((diff / (1000 * 60)) % 60);
            const s = Math.floor((diff / 1000) % 60);

            // Appliquer ou retirer la classe rouge selon le temps restant
            if (h < 1) {
                el.classList.add('red-alert');
            } else {
                el.classList.remove('red-alert');
            }

            el.textContent = `${h}h ${m}m ${s}s`;
        }, 1000);
    });
});
</script>




{% endblock %}
